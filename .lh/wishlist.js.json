{
    "sourceFile": "wishlist.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1739278445978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739278452770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,5 +100,5 @@\n         res.json({ message: \"product deleted successfully\" });\n       });\n     });\n   });\n-  \n\\ No newline at end of file\n+export  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1739278460992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,5 +100,6 @@\n         res.json({ message: \"product deleted successfully\" });\n       });\n     });\n   });\n-export  \n\\ No newline at end of file\n+  \n+  mo\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739278469196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,5 +101,5 @@\n       });\n     });\n   });\n   \n-  mo\n\\ No newline at end of file\n+  module.exports\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739278474889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,5 +101,5 @@\n       });\n     });\n   });\n   \n-  module.exports\n\\ No newline at end of file\n+  module.exports = router\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739278501467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n \n+\n // Read wishlist.json\n app.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n"
                },
                {
                    "date": 1739278506700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,11 @@\n \n+const express = require(\"express\");\n+const fs = require(\"fs\");\n+const path = require(\"path\");\n+const router= express.Router();\n+const app = express();\n+const cartPath = path.join(__dirname, \"cart.json\");\n \n // Read wishlist.json\n app.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n"
                },
                {
                    "date": 1739278514607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const fs = require(\"fs\");\n const path = require(\"path\");\n const router= express.Router();\n const app = express();\n-const cartPath = path.join(__dirname, \"cart.json\");\n+const cartPath = path.join(__dirname, \"wis.json\");\n \n // Read wishlist.json\n app.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n"
                },
                {
                    "date": 1739278521519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const fs = require(\"fs\");\n const path = require(\"path\");\n const router= express.Router();\n const app = express();\n-const cartPath = path.join(__dirname, \"wis.json\");\n+const cartPath = path.join(__dirname, \"wishlist.json\");\n \n // Read wishlist.json\n app.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n"
                },
                {
                    "date": 1739278530467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const fs = require(\"fs\");\n const path = require(\"path\");\n const router= express.Router();\n const app = express();\n-const cartPath = path.join(__dirname, \"wishlist.json\");\n+const Path = path.join(__dirname, \"wishlist.json\");\n \n // Read wishlist.json\n app.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n"
                },
                {
                    "date": 1739278539392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n const fs = require(\"fs\");\n const path = require(\"path\");\n const router= express.Router();\n const app = express();\n-const Path = path.join(__dirname, \"wishlist.json\");\n+const wisPath = path.join(__dirname, \"wishlist.json\");\n \n // Read wishlist.json\n app.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n"
                },
                {
                    "date": 1739278582477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,12 @@\n const fs = require(\"fs\");\n const path = require(\"path\");\n const router= express.Router();\n const app = express();\n-const wisPath = path.join(__dirname, \"wishlist.json\");\n+const wishlistPath = path.join(__dirname, \"wishlist.json\");\n \n // Read wishlist.json\n-app.get(\"/wishlist/\", (req, res) => {\n+.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n       const jsonData = JSON.parse(data);\n@@ -16,9 +16,9 @@\n     });\n   });\n   \n   // Add a new Product in wishlist.json\n-  app.post(\"/addTowishlist/\", (req, res) => {\n+  .post(\"/addTowishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n       const jsonData = JSON.parse(data);\n@@ -44,9 +44,9 @@\n     const data = { wishlist };\n     fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n   };\n   // Endpoint to get a single product by id\n-  app.get(\"/wishlist/id\", (req, res) => {\n+  .get(\"/wishlist/id\", (req, res) => {\n     try {\n       const products = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const product = wishlist.find((p) => p.id === id);\n@@ -59,9 +59,9 @@\n     }\n   });\n   \n   // PATCH endpoint to update a product partially\n-  app.patch(\"/updateWishlist/:id\", (req, res) => {\n+  .patch(\"/updateWishlist/:id\", (req, res) => {\n     try {\n       const products = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const index = wishlist.findIndex((p) => p.id === id);\n@@ -84,9 +84,9 @@\n     }\n   });\n   \n   // *API to Delete an Item by ID wishlist*\n-  app.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n+  .delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n       let db = JSON.parse(data);\n"
                },
                {
                    "date": 1739279047345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,13 @@\n const express = require(\"express\");\n const fs = require(\"fs\");\n const path = require(\"path\");\n const router= express.Router();\n-const app = express();\n+\n const wishlistPath = path.join(__dirname, \"wishlist.json\");\n \n // Read wishlist.json\n-.get(\"/wishlist/\", (req, res) => {\n+router.get(\"/wishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n       const jsonData = JSON.parse(data);\n@@ -16,9 +16,9 @@\n     });\n   });\n   \n   // Add a new Product in wishlist.json\n-  .post(\"/addTowishlist/\", (req, res) => {\n+  router.post(\"/addTowishlist/\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n       const jsonData = JSON.parse(data);\n@@ -44,9 +44,9 @@\n     const data = { wishlist };\n     fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n   };\n   // Endpoint to get a single product by id\n-  .get(\"/wishlist/id\", (req, res) => {\n+  router.get(\"/wishlist/id\", (req, res) => {\n     try {\n       const products = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const product = wishlist.find((p) => p.id === id);\n@@ -59,9 +59,9 @@\n     }\n   });\n   \n   // PATCH endpoint to update a product partially\n-  .patch(\"/updateWishlist/:id\", (req, res) => {\n+  router.patch(\"/updateWishlist/:id\", (req, res) => {\n     try {\n       const products = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const index = wishlist.findIndex((p) => p.id === id);\n@@ -84,9 +84,9 @@\n     }\n   });\n   \n   // *API to Delete an Item by ID wishlist*\n-  .delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n+  router.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n       let db = JSON.parse(data);\n"
                },
                {
                    "date": 1739279054261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n \n const express = require(\"express\");\n const fs = require(\"fs\");\n const path = require(\"path\");\n+const app = express();\n const router= express.Router();\n-\n const wishlistPath = path.join(__dirname, \"wishlist.json\");\n \n // Read wishlist.json\n router.get(\"/wishlist/\", (req, res) => {\n"
                },
                {
                    "date": 1739279893823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,112 +1,112 @@\n \n-const express = require(\"express\");\n-const fs = require(\"fs\");\n-const path = require(\"path\");\n-const app = express();\n-const router= express.Router();\n-const wishlistPath = path.join(__dirname, \"wishlist.json\");\n+// const express = require(\"express\");\n+// const fs = require(\"fs\");\n+// const path = require(\"path\");\n+// const app = express();\n+// const router= express.Router();\n+// const wishlistPath = path.join(__dirname, \"wishlist.json\");\n \n-// Read wishlist.json\n-router.get(\"/wishlist/\", (req, res) => {\n-    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n-      if (err) return res.status(500).json({ error: \"Error reading database\" });\n+// // Read wishlist.json\n+// router.get(\"/wishlist/\", (req, res) => {\n+//     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n+//       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n-      const jsonData = JSON.parse(data);\n-      res.json(jsonData.wishlist);\n-    });\n-  });\n+//       const jsonData = JSON.parse(data);\n+//       res.json(jsonData.wishlist);\n+//     });\n+//   });\n   \n-  // Add a new Product in wishlist.json\n-  router.post(\"/addTowishlist/\", (req, res) => {\n-    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n-      if (err) return res.status(500).json({ error: \"Error reading database\" });\n+//   // Add a new Product in wishlist.json\n+//   router.post(\"/addTowishlist/\", (req, res) => {\n+//     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n+//       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n-      const jsonData = JSON.parse(data);\n-      const product = { id: jsonData.wishlist.length + 1, ...req.body };\n-      jsonData.wishlist.push(product);\n+//       const jsonData = JSON.parse(data);\n+//       const product = { id: jsonData.wishlist.length + 1, ...req.body };\n+//       jsonData.wishlist.push(product);\n   \n-      fs.writeFile(wishlistPath, JSON.stringify(jsonData, null, 2), (err) => {\n-        if (err) return res.status(500).json({ error: \"Error saving data\" });\n-        res.status(201).json(product);\n-      });\n-    });\n-  });\n+//       fs.writeFile(wishlistPath, JSON.stringify(jsonData, null, 2), (err) => {\n+//         if (err) return res.status(500).json({ error: \"Error saving data\" });\n+//         res.status(201).json(product);\n+//       });\n+//     });\n+//   });\n   \n-  // Utility: Read wishlist data from file\n-  const readProductsWishList = () => {\n-    const rawData = fs.readFileSync(wishlistPath);\n-    const data = JSON.parse(rawData);\n-    return data.wishlist;\n-  };\n+//   // Utility: Read wishlist data from file\n+//   const readProductsWishList = () => {\n+//     const rawData = fs.readFileSync(wishlistPath);\n+//     const data = JSON.parse(rawData);\n+//     return data.wishlist;\n+//   };\n   \n-  // Utility: Write updated wishlist back to file\n-  const writeProductsWishList = (wishlist) => {\n-    const data = { wishlist };\n-    fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n-  };\n-  // Endpoint to get a single product by id\n-  router.get(\"/wishlist/id\", (req, res) => {\n-    try {\n-      const products = readProductsWishList();\n-      const id = parseInt(req.params.id, 10);\n-      const product = wishlist.find((p) => p.id === id);\n-      if (!product) {\n-        return res.status(404).json({ error: \"Product not found\" });\n-      }\n-      res.json(product);\n-    } catch (err) {\n-      res.status(500).json({ error: \"Failed to read products data\" });\n-    }\n-  });\n+//   // Utility: Write updated wishlist back to file\n+//   const writeProductsWishList = (wishlist) => {\n+//     const data = { wishlist };\n+//     fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n+//   };\n+//   // Endpoint to get a single product by id\n+//   router.get(\"/wishlist/id\", (req, res) => {\n+//     try {\n+//       const products = readProductsWishList();\n+//       const id = parseInt(req.params.id, 10);\n+//       const product = wishlist.find((p) => p.id === id);\n+//       if (!product) {\n+//         return res.status(404).json({ error: \"Product not found\" });\n+//       }\n+//       res.json(product);\n+//     } catch (err) {\n+//       res.status(500).json({ error: \"Failed to read products data\" });\n+//     }\n+//   });\n\\ No newline at end of file\n   \n-  // PATCH endpoint to update a product partially\n-  router.patch(\"/updateWishlist/:id\", (req, res) => {\n-    try {\n-      const products = readProductsWishList();\n-      const id = parseInt(req.params.id, 10);\n-      const index = wishlist.findIndex((p) => p.id === id);\n+//   // PATCH endpoint to update a product partially\n+//   router.patch(\"/updateWishlist/:id\", (req, res) => {\n+//     try {\n+//       const products = readProductsWishList();\n+//       const id = parseInt(req.params.id, 10);\n+//       const index = wishlist.findIndex((p) => p.id === id);\n   \n-      if (index === -1) {\n-        return res.status(404).json({ error: \"Product not found\" });\n-      }\n+//       if (index === -1) {\n+//         return res.status(404).json({ error: \"Product not found\" });\n+//       }\n   \n-      // Merge the existing product with the fields sent in the request body\n-      const updatedProduct = { ...products[index], ...req.body };\n-      products[index] = updatedProduct;\n+//       // Merge the existing product with the fields sent in the request body\n+//       const updatedProduct = { ...products[index], ...req.body };\n+//       products[index] = updatedProduct;\n   \n-      // Write the updated products back to the file\n-      writeProductsWishList(products);\n+//       // Write the updated products back to the file\n+//       writeProductsWishList(products);\n   \n-      res.json(updatedProduct);\n-    } catch (err) {\n-      console.error(\"Error patching product:\", err);\n-      res.status(500).json({ error: \"Failed to update product\" });\n-    }\n-  });\n+//       res.json(updatedProduct);\n+//     } catch (err) {\n+//       console.error(\"Error patching product:\", err);\n+//       res.status(500).json({ error: \"Failed to update product\" });\n+//     }\n+//   });\n   \n-  // *API to Delete an Item by ID wishlist*\n-  router.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n-    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n-      if (err) return res.status(500).json({ error: \"Error reading database\" });\n+//   // *API to Delete an Item by ID wishlist*\n+//   router.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n+//     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n+//       if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n-      let db = JSON.parse(data);\n-      const itemId = parseInt(req.params.id);\n+//       let db = JSON.parse(data);\n+//       const itemId = parseInt(req.params.id);\n   \n-      // Find the item index\n-      const itemIndex = db.wishlist.findIndex((item) => item.id === itemId);\n-      if (itemIndex === -1)\n-        return res.status(404).json({ message: \"Item not found\" });\n+//       // Find the item index\n+//       const itemIndex = db.wishlist.findIndex((item) => item.id === itemId);\n+//       if (itemIndex === -1)\n+//         return res.status(404).json({ message: \"Item not found\" });\n   \n-      // Remove the item\n-      db.wishlist.splice(itemIndex, 1);\n+//       // Remove the item\n+//       db.wishlist.splice(itemIndex, 1);\n   \n-      // Save updated data to db.json\n-      fs.writeFile(wishlistPath, JSON.stringify(db, null, 2), (err) => {\n-        if (err) return res.status(500).json({ error: \"Error saving database\" });\n+//       // Save updated data to db.json\n+//       fs.writeFile(wishlistPath, JSON.stringify(db, null, 2), (err) => {\n+//         if (err) return res.status(500).json({ error: \"Error saving database\" });\n   \n-        res.json({ message: \"product deleted successfully\" });\n-      });\n-    });\n-  });\n+//         res.json({ message: \"product deleted successfully\" });\n+//       });\n+//     });\n+//   });\n   \n-  module.exports = router\n+//   module.exports = router\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739280070646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,112 +1,112 @@\n \n-// const express = require(\"express\");\n-// const fs = require(\"fs\");\n-// const path = require(\"path\");\n-// const app = express();\n-// const router= express.Router();\n-// const wishlistPath = path.join(__dirname, \"wishlist.json\");\n+const express = require(\"express\");\n+const fs = require(\"fs\");\n+const path = require(\"path\");\n+const app = express();\n+const router= express.Router();\n+const wishlistPath = path.join(__dirname, \"wishlist.json\");\n \n-// // Read wishlist.json\n-// router.get(\"/wishlist/\", (req, res) => {\n-//     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n-//       if (err) return res.status(500).json({ error: \"Error reading database\" });\n+// Read wishlist.json\n+router.get(\"/wishlist/\", (req, res) => {\n+    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n+      if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n-//       const jsonData = JSON.parse(data);\n-//       res.json(jsonData.wishlist);\n-//     });\n-//   });\n+      const jsonData = JSON.parse(data);\n+      res.json(jsonData.wishlist);\n+    });\n+  });\n   \n-//   // Add a new Product in wishlist.json\n-//   router.post(\"/addTowishlist/\", (req, res) => {\n-//     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n-//       if (err) return res.status(500).json({ error: \"Error reading database\" });\n+  // Add a new Product in wishlist.json\n+  router.post(\"/addTowishlist/\", (req, res) => {\n+    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n+      if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n-//       const jsonData = JSON.parse(data);\n-//       const product = { id: jsonData.wishlist.length + 1, ...req.body };\n-//       jsonData.wishlist.push(product);\n+      const jsonData = JSON.parse(data);\n+      const product = { id: jsonData.wishlist.length + 1, ...req.body };\n+      jsonData.wishlist.push(product);\n   \n-//       fs.writeFile(wishlistPath, JSON.stringify(jsonData, null, 2), (err) => {\n-//         if (err) return res.status(500).json({ error: \"Error saving data\" });\n-//         res.status(201).json(product);\n-//       });\n-//     });\n-//   });\n+      fs.writeFile(wishlistPath, JSON.stringify(jsonData, null, 2), (err) => {\n+        if (err) return res.status(500).json({ error: \"Error saving data\" });\n+        res.status(201).json(product);\n+      });\n+    });\n+  });\n   \n-//   // Utility: Read wishlist data from file\n-//   const readProductsWishList = () => {\n-//     const rawData = fs.readFileSync(wishlistPath);\n-//     const data = JSON.parse(rawData);\n-//     return data.wishlist;\n-//   };\n+  // Utility: Read wishlist data from file\n+  const readProductsWishList = () => {\n+    const rawData = fs.readFileSync(wishlistPath);\n+    const data = JSON.parse(rawData);\n+    return data.wishlist;\n+  };\n   \n-//   // Utility: Write updated wishlist back to file\n-//   const writeProductsWishList = (wishlist) => {\n-//     const data = { wishlist };\n-//     fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n-//   };\n-//   // Endpoint to get a single product by id\n-//   router.get(\"/wishlist/id\", (req, res) => {\n-//     try {\n-//       const products = readProductsWishList();\n-//       const id = parseInt(req.params.id, 10);\n-//       const product = wishlist.find((p) => p.id === id);\n-//       if (!product) {\n-//         return res.status(404).json({ error: \"Product not found\" });\n-//       }\n-//       res.json(product);\n-//     } catch (err) {\n-//       res.status(500).json({ error: \"Failed to read products data\" });\n-//     }\n-//   });\n+  // Utility: Write updated wishlist back to file\n+  const writeProductsWishList = (wishlist) => {\n+    const data = { wishlist };\n+    fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n+  };\n+  // Endpoint to get a single product by id\n+  router.get(\"/wishlist/id\", (req, res) => {\n+    try {\n+      const products = readProductsWishList();\n+      const id = parseInt(req.params.id, 10);\n+      const product = wishlist.find((p) => p.id === id);\n+      if (!product) {\n+        return res.status(404).json({ error: \"Product not found\" });\n+      }\n+      res.json(product);\n+    } catch (err) {\n+      res.status(500).json({ error: \"Failed to read products data\" });\n+    }\n+  });\n\\ No newline at end of file\n   \n-//   // PATCH endpoint to update a product partially\n-//   router.patch(\"/updateWishlist/:id\", (req, res) => {\n-//     try {\n-//       const products = readProductsWishList();\n-//       const id = parseInt(req.params.id, 10);\n-//       const index = wishlist.findIndex((p) => p.id === id);\n+  // PATCH endpoint to update a product partially\n+  router.patch(\"/updateWishlist/:id\", (req, res) => {\n+    try {\n+      const products = readProductsWishList();\n+      const id = parseInt(req.params.id, 10);\n+      const index = wishlist.findIndex((p) => p.id === id);\n   \n-//       if (index === -1) {\n-//         return res.status(404).json({ error: \"Product not found\" });\n-//       }\n+      if (index === -1) {\n+        return res.status(404).json({ error: \"Product not found\" });\n+      }\n   \n-//       // Merge the existing product with the fields sent in the request body\n-//       const updatedProduct = { ...products[index], ...req.body };\n-//       products[index] = updatedProduct;\n+      // Merge the existing product with the fields sent in the request body\n+      const updatedProduct = { ...products[index], ...req.body };\n+      products[index] = updatedProduct;\n   \n-//       // Write the updated products back to the file\n-//       writeProductsWishList(products);\n+      // Write the updated products back to the file\n+      writeProductsWishList(products);\n   \n-//       res.json(updatedProduct);\n-//     } catch (err) {\n-//       console.error(\"Error patching product:\", err);\n-//       res.status(500).json({ error: \"Failed to update product\" });\n-//     }\n-//   });\n+      res.json(updatedProduct);\n+    } catch (err) {\n+      console.error(\"Error patching product:\", err);\n+      res.status(500).json({ error: \"Failed to update product\" });\n+    }\n+  });\n   \n-//   // *API to Delete an Item by ID wishlist*\n-//   router.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n-//     fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n-//       if (err) return res.status(500).json({ error: \"Error reading database\" });\n+  // *API to Delete an Item by ID wishlist*\n+  router.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n+    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n+      if (err) return res.status(500).json({ error: \"Error reading database\" });\n   \n-//       let db = JSON.parse(data);\n-//       const itemId = parseInt(req.params.id);\n+      let db = JSON.parse(data);\n+      const itemId = parseInt(req.params.id);\n   \n-//       // Find the item index\n-//       const itemIndex = db.wishlist.findIndex((item) => item.id === itemId);\n-//       if (itemIndex === -1)\n-//         return res.status(404).json({ message: \"Item not found\" });\n+      // Find the item index\n+      const itemIndex = db.wishlist.findIndex((item) => item.id === itemId);\n+      if (itemIndex === -1)\n+        return res.status(404).json({ message: \"Item not found\" });\n   \n-//       // Remove the item\n-//       db.wishlist.splice(itemIndex, 1);\n+      // Remove the item\n+      db.wishlist.splice(itemIndex, 1);\n   \n-//       // Save updated data to db.json\n-//       fs.writeFile(wishlistPath, JSON.stringify(db, null, 2), (err) => {\n-//         if (err) return res.status(500).json({ error: \"Error saving database\" });\n+      // Save updated data to db.json\n+      fs.writeFile(wishlistPath, JSON.stringify(db, null, 2), (err) => {\n+        if (err) return res.status(500).json({ error: \"Error saving database\" });\n   \n-//         res.json({ message: \"product deleted successfully\" });\n-//       });\n-//     });\n-//   });\n+        res.json({ message: \"product deleted successfully\" });\n+      });\n+    });\n+  });\n   \n-//   module.exports = router\n+  module.exports = router\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739285715580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   };\n   // Endpoint to get a single product by id\n   router.get(\"/wishlist/id\", (req, res) => {\n     try {\n-      const products = readProductsWishList();\n+      const productsB = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const product = wishlist.find((p) => p.id === id);\n       if (!product) {\n         return res.status(404).json({ error: \"Product not found\" });\n"
                },
                {
                    "date": 1739285773523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   };\n   // Endpoint to get a single product by id\n   router.get(\"/wishlist/id\", (req, res) => {\n     try {\n-      const productsB = readProductsWishList();\n+      const wish = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const product = wishlist.find((p) => p.id === id);\n       if (!product) {\n         return res.status(404).json({ error: \"Product not found\" });\n"
                },
                {
                    "date": 1739285874814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   };\n   // Endpoint to get a single product by id\n   router.get(\"/wishlist/id\", (req, res) => {\n     try {\n-      const wish = readProductsWishList();\n+      const  = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const product = wishlist.find((p) => p.id === id);\n       if (!product) {\n         return res.status(404).json({ error: \"Product not found\" });\n"
                },
                {
                    "date": 1739285886984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,11 @@\n   };\n   // Endpoint to get a single product by id\n   router.get(\"/wishlist/id\", (req, res) => {\n     try {\n-      const  = readProductsWishList();\n+      const products = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n-      const product = wishlist.find((p) => p.id === id);\n+      const product = products.find((p) => p.id === id);\n       if (!product) {\n         return res.status(404).json({ error: \"Product not found\" });\n       }\n       res.json(product);\n"
                },
                {
                    "date": 1739286088322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,11 @@\n   };\n   // Endpoint to get a single product by id\n   router.get(\"/wishlist/id\", (req, res) => {\n     try {\n-      const products = readProductsWishList();\n+      const wish = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n-      const product = products.find((p) => p.id === id);\n+      const product = wish.find((p) => p.id === id);\n       if (!product) {\n         return res.status(404).json({ error: \"Product not found\" });\n       }\n       res.json(product);\n"
                },
                {
                    "date": 1739286094210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,11 @@\n   };\n   // Endpoint to get a single product by id\n   router.get(\"/wishlist/id\", (req, res) => {\n     try {\n-      const wish = readProductsWishList();\n+      const wishlist = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n-      const product = wish.find((p) => p.id === id);\n+      const product = wishlist.find((p) => p.id === id);\n       if (!product) {\n         return res.status(404).json({ error: \"Product not found\" });\n       }\n       res.json(product);\n"
                },
                {
                    "date": 1739286112698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     const data = { wishlist };\n     fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n   };\n   // Endpoint to get a single product by id\n-  router.get(\"/wishlist/id\", (req, res) => {\n+  router.get(\"/wishlist/:id\", (req, res) => {\n     try {\n       const wishlist = readProductsWishList();\n       const id = parseInt(req.params.id, 10);\n       const product = wishlist.find((p) => p.id === id);\n"
                }
            ],
            "date": 1739278445978,
            "name": "Commit-0",
            "content": "\n// Read wishlist.json\napp.get(\"/wishlist/\", (req, res) => {\n    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n      if (err) return res.status(500).json({ error: \"Error reading database\" });\n  \n      const jsonData = JSON.parse(data);\n      res.json(jsonData.wishlist);\n    });\n  });\n  \n  // Add a new Product in wishlist.json\n  app.post(\"/addTowishlist/\", (req, res) => {\n    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n      if (err) return res.status(500).json({ error: \"Error reading database\" });\n  \n      const jsonData = JSON.parse(data);\n      const product = { id: jsonData.wishlist.length + 1, ...req.body };\n      jsonData.wishlist.push(product);\n  \n      fs.writeFile(wishlistPath, JSON.stringify(jsonData, null, 2), (err) => {\n        if (err) return res.status(500).json({ error: \"Error saving data\" });\n        res.status(201).json(product);\n      });\n    });\n  });\n  \n  // Utility: Read wishlist data from file\n  const readProductsWishList = () => {\n    const rawData = fs.readFileSync(wishlistPath);\n    const data = JSON.parse(rawData);\n    return data.wishlist;\n  };\n  \n  // Utility: Write updated wishlist back to file\n  const writeProductsWishList = (wishlist) => {\n    const data = { wishlist };\n    fs.writeFileSync(wishlistPath, JSON.stringify(data, null, 2));\n  };\n  // Endpoint to get a single product by id\n  app.get(\"/wishlist/id\", (req, res) => {\n    try {\n      const products = readProductsWishList();\n      const id = parseInt(req.params.id, 10);\n      const product = wishlist.find((p) => p.id === id);\n      if (!product) {\n        return res.status(404).json({ error: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (err) {\n      res.status(500).json({ error: \"Failed to read products data\" });\n    }\n  });\n  \n  // PATCH endpoint to update a product partially\n  app.patch(\"/updateWishlist/:id\", (req, res) => {\n    try {\n      const products = readProductsWishList();\n      const id = parseInt(req.params.id, 10);\n      const index = wishlist.findIndex((p) => p.id === id);\n  \n      if (index === -1) {\n        return res.status(404).json({ error: \"Product not found\" });\n      }\n  \n      // Merge the existing product with the fields sent in the request body\n      const updatedProduct = { ...products[index], ...req.body };\n      products[index] = updatedProduct;\n  \n      // Write the updated products back to the file\n      writeProductsWishList(products);\n  \n      res.json(updatedProduct);\n    } catch (err) {\n      console.error(\"Error patching product:\", err);\n      res.status(500).json({ error: \"Failed to update product\" });\n    }\n  });\n  \n  // *API to Delete an Item by ID wishlist*\n  app.delete(\"/wishlistRemoveItem/:id\", (req, res) => {\n    fs.readFile(wishlistPath, \"utf8\", (err, data) => {\n      if (err) return res.status(500).json({ error: \"Error reading database\" });\n  \n      let db = JSON.parse(data);\n      const itemId = parseInt(req.params.id);\n  \n      // Find the item index\n      const itemIndex = db.wishlist.findIndex((item) => item.id === itemId);\n      if (itemIndex === -1)\n        return res.status(404).json({ message: \"Item not found\" });\n  \n      // Remove the item\n      db.wishlist.splice(itemIndex, 1);\n  \n      // Save updated data to db.json\n      fs.writeFile(wishlistPath, JSON.stringify(db, null, 2), (err) => {\n        if (err) return res.status(500).json({ error: \"Error saving database\" });\n  \n        res.json({ message: \"product deleted successfully\" });\n      });\n    });\n  });\n  "
        }
    ]
}