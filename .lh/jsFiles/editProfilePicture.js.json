{
    "sourceFile": "jsFiles/editProfilePicture.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1742298751291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742298761238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n   if (!req.file) return res.status(400).json({ message: \"No file uploaded\" });\n \n   // Save the correct image path\n-  const imageUrl = `/profileImages/${req.file.filename}`;\n+  const imageUrl = `/public/profileImages/${req.file.filename}`;\n   users[userIndex].profileImage = imageUrl;\n \n   writeUsers(users);\n \n"
                },
                {
                    "date": 1742298946398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(\"public/profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(\"public'profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742298952213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(\"public'profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(\"public\",profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742298972541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(\"public\",profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(--\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742298978964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(--\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(__dirname\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742298984165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(__dirname\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(__dirname.ji\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742298991658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(__dirname.ji\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(__dirname.join,\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742299004088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(__dirname.join,\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static((__dirname.join,\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742299011009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static((__dirname.join,\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(path.join(__dirname.join,\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742299020924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(path.join(__dirname.join,\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(path.join(__dirname.join,\"public\",\"profileImages\"))); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742299094225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(path.join(__dirname.join,\"public\",\"profileImages\"))); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(path.join(__dirname,\"public\",\"profileImages\"))); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742300310545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(path.join(__dirname,\"public\",\"profileImages\"))); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(path.join(__dirname.join,\"public\",\"profileImages\"))); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742300315984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(path.join(__dirname.join,\"public\",\"profileImages\"))); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(__dirname.join\"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742300322538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(__dirname.join\"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static( \"public\",\"profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742300329201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static( \"public\",\"profileImages\")); // Serve profile images\n+router.use(\"/public/profileImages\", express.static(\"public/profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n"
                },
                {
                    "date": 1742300358730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+const express = require(\"express\");\n+const cors = require(\"cors\");\n+const fs = require(\"fs\");\n+const bodyParser = require(\"body-parser\");\n+const multer = require(\"multer\");\n+const path = require(\"path\");\n+\n+const router = express.Router();\n+const USERS_FILE = \"./jsonFiles/account.json\";\n+\n+// Middleware\n+router.use(cors());\n+router.use(bodyParser.json());\n+router.use(\"/public/pImages\", express.static(\"public/profileImages\")); // Serve profile images\n+\n+// Multer Configuration for Profile Image Uploads\n+const storage = multer.diskStorage({\n+  destination: (req, file, cb) => {\n+    const uploadPath = \"public/profileImages\"; \n+    if (!fs.existsSync(uploadPath)) fs.mkdirSync(uploadPath, { recursive: true }); // Ensure directory exists\n+    cb(null, uploadPath);\n+  },\n+  filename: (req, file, cb) => {\n+    cb(null, `${Date.now()}-${file.originalname}`); // Prevent duplicate names\n+  },\n+});\n+\n+const upload = multer({ storage });\n+\n+// Read Users from File\n+const readUsers = () => {\n+  try {\n+    const data = fs.readFileSync(USERS_FILE);\n+    return JSON.parse(data).users;\n+  } catch (error) {\n+    return [];\n+  }\n+};\n+\n+// Write Users to File\n+const writeUsers = (users) => {\n+  fs.writeFileSync(USERS_FILE, JSON.stringify({ users }, null, 2));\n+};\n+\n+// 🟠 *Upload and Update Profile Picture*\n+router.put(\"/profile/update-image/:userId\", upload.single(\"profileImage\"), (req, res) => {\n+  const { userId } = req.params;\n+  let users = readUsers();\n+  const userIndex = users.findIndex((user) => user.id === parseInt(userId));\n+\n+  if (userIndex === -1) return res.status(404).json({ message: \"User not found\" });\n+\n+  if (!req.file) return res.status(400).json({ message: \"No file uploaded\" });\n+\n+  // Save the correct image path\n+  const imageUrl = `/public/profileImages/${req.file.filename}`;\n+  users[userIndex].profileImage = imageUrl;\n+\n+  writeUsers(users);\n+\n+  res.json({ message: \"Profile image updated\", user: users[userIndex] });\n+});\n+\n+module.exports = router;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742300368005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/pImages\", express.static(\"public/profileImages\")); // Serve profile images\n+router.use(\"/public/images\", express.static(\"public/mages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n@@ -60,69 +60,5 @@\n \n   res.json({ message: \"Profile image updated\", user: users[userIndex] });\n });\n \n-module.exports = router;\n-const express = require(\"express\");\n-const cors = require(\"cors\");\n-const fs = require(\"fs\");\n-const bodyParser = require(\"body-parser\");\n-const multer = require(\"multer\");\n-const path = require(\"path\");\n-\n-const router = express.Router();\n-const USERS_FILE = \"./jsonFiles/account.json\";\n-\n-// Middleware\n-router.use(cors());\n-router.use(bodyParser.json());\n-router.use(\"/public/profileImages\", express.static(\"public/profileImages\")); // Serve profile images\n-\n-// Multer Configuration for Profile Image Uploads\n-const storage = multer.diskStorage({\n-  destination: (req, file, cb) => {\n-    const uploadPath = \"public/profileImages\"; \n-    if (!fs.existsSync(uploadPath)) fs.mkdirSync(uploadPath, { recursive: true }); // Ensure directory exists\n-    cb(null, uploadPath);\n-  },\n-  filename: (req, file, cb) => {\n-    cb(null, `${Date.now()}-${file.originalname}`); // Prevent duplicate names\n-  },\n-});\n-\n-const upload = multer({ storage });\n-\n-// Read Users from File\n-const readUsers = () => {\n-  try {\n-    const data = fs.readFileSync(USERS_FILE);\n-    return JSON.parse(data).users;\n-  } catch (error) {\n-    return [];\n-  }\n-};\n-\n-// Write Users to File\n-const writeUsers = (users) => {\n-  fs.writeFileSync(USERS_FILE, JSON.stringify({ users }, null, 2));\n-};\n-\n-// 🟠 *Upload and Update Profile Picture*\n-router.put(\"/profile/update-image/:userId\", upload.single(\"profileImage\"), (req, res) => {\n-  const { userId } = req.params;\n-  let users = readUsers();\n-  const userIndex = users.findIndex((user) => user.id === parseInt(userId));\n-\n-  if (userIndex === -1) return res.status(404).json({ message: \"User not found\" });\n-\n-  if (!req.file) return res.status(400).json({ message: \"No file uploaded\" });\n-\n-  // Save the correct image path\n-  const imageUrl = `/public/profileImages/${req.file.filename}`;\n-  users[userIndex].profileImage = imageUrl;\n-\n-  writeUsers(users);\n-\n-  res.json({ message: \"Profile image updated\", user: users[userIndex] });\n-});\n-\n module.exports = router;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1742300374048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,14 +10,14 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/images\", express.static(\"public/mages\")); // Serve profile images\n+router.use(\"/public/images\", express.static(\"public/images\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n-    const uploadPath = \"public/profileImages\"; \n+    const uploadPath = \"public/mages\"; \n     if (!fs.existsSync(uploadPath)) fs.mkdirSync(uploadPath, { recursive: true }); // Ensure directory exists\n     cb(null, uploadPath);\n   },\n   filename: (req, file, cb) => {\n"
                },
                {
                    "date": 1742300385767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n-    const uploadPath = \"public/mages\"; \n+    const uploadPath = \"public/images\"; \n     if (!fs.existsSync(uploadPath)) fs.mkdirSync(uploadPath, { recursive: true }); // Ensure directory exists\n     cb(null, uploadPath);\n   },\n   filename: (req, file, cb) => {\n@@ -52,9 +52,9 @@\n \n   if (!req.file) return res.status(400).json({ message: \"No file uploaded\" });\n \n   // Save the correct image path\n-  const imageUrl = `/public/profileImages/${req.file.filename}`;\n+  const imageUrl = `/pmages/${req.file.filename}`;\n   users[userIndex].profileImage = imageUrl;\n \n   writeUsers(users);\n \n"
                },
                {
                    "date": 1742300575205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,14 +10,14 @@\n \n // Middleware\n router.use(cors());\n router.use(bodyParser.json());\n-router.use(\"/public/images\", express.static(\"public/images\")); // Serve profile images\n+router.use(\"/public/mages\", express.static(\"public/profileImages\")); // Serve profile images\n \n // Multer Configuration for Profile Image Uploads\n const storage = multer.diskStorage({\n   destination: (req, file, cb) => {\n-    const uploadPath = \"public/images\"; \n+    const uploadPath = \"public/profileImages\"; \n     if (!fs.existsSync(uploadPath)) fs.mkdirSync(uploadPath, { recursive: true }); // Ensure directory exists\n     cb(null, uploadPath);\n   },\n   filename: (req, file, cb) => {\n@@ -52,9 +52,9 @@\n \n   if (!req.file) return res.status(400).json({ message: \"No file uploaded\" });\n \n   // Save the correct image path\n-  const imageUrl = `/pmages/${req.file.filename}`;\n+  const imageUrl = `/public/profileImages/${req.file.filename}`;\n   users[userIndex].profileImage = imageUrl;\n \n   writeUsers(users);\n \n"
                }
            ],
            "date": 1742298751291,
            "name": "Commit-0",
            "content": "const express = require(\"express\");\nconst cors = require(\"cors\");\nconst fs = require(\"fs\");\nconst bodyParser = require(\"body-parser\");\nconst multer = require(\"multer\");\nconst path = require(\"path\");\n\nconst router = express.Router();\nconst USERS_FILE = \"./jsonFiles/account.json\";\n\n// Middleware\nrouter.use(cors());\nrouter.use(bodyParser.json());\nrouter.use(\"/public/profileImages\", express.static(\"public/profileImages\")); // Serve profile images\n\n// Multer Configuration for Profile Image Uploads\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    const uploadPath = \"public/profileImages\"; \n    if (!fs.existsSync(uploadPath)) fs.mkdirSync(uploadPath, { recursive: true }); // Ensure directory exists\n    cb(null, uploadPath);\n  },\n  filename: (req, file, cb) => {\n    cb(null, `${Date.now()}-${file.originalname}`); // Prevent duplicate names\n  },\n});\n\nconst upload = multer({ storage });\n\n// Read Users from File\nconst readUsers = () => {\n  try {\n    const data = fs.readFileSync(USERS_FILE);\n    return JSON.parse(data).users;\n  } catch (error) {\n    return [];\n  }\n};\n\n// Write Users to File\nconst writeUsers = (users) => {\n  fs.writeFileSync(USERS_FILE, JSON.stringify({ users }, null, 2));\n};\n\n// 🟠 *Upload and Update Profile Picture*\nrouter.put(\"/profile/update-image/:userId\", upload.single(\"profileImage\"), (req, res) => {\n  const { userId } = req.params;\n  let users = readUsers();\n  const userIndex = users.findIndex((user) => user.id === parseInt(userId));\n\n  if (userIndex === -1) return res.status(404).json({ message: \"User not found\" });\n\n  if (!req.file) return res.status(400).json({ message: \"No file uploaded\" });\n\n  // Save the correct image path\n  const imageUrl = `/profileImages/${req.file.filename}`;\n  users[userIndex].profileImage = imageUrl;\n\n  writeUsers(users);\n\n  res.json({ message: \"Profile image updated\", user: users[userIndex] });\n});\n\nmodule.exports = router;"
        }
    ]
}